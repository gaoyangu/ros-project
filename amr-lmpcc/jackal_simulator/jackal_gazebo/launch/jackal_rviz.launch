<launch>
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_name" default="$(find jackal_gazebo)/worlds/jackal_race.world" />

  <!-- Short-term hack to support the original front_laser:=true argument for spawning
       the simulator. This will be removed in favour of using the config:=x arg instead. -->
  <arg name="front_laser" default="false" />
  <arg name="default_config" value="front_laser" if="$(arg front_laser)" />
  <arg name="default_config" value="base" unless="$(arg front_laser)" />
  <!-- end of hack -->
  <arg name="robot" default="jackal"/>
  <arg name="pkg_hardware_config" default="$(find jackal_description)"/>

  <!-- Configuration of Jackal which you would like to simulate.
       See jackal_description for details. -->
  <arg name="config" default="$(arg default_config)" />

  <!-- Launch Gazebo with the specified world
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>
  -->
  <!-- Static frames -->
  <node pkg="tf" type="static_transform_publisher" name="static_transform_publisher_map_odom" output="screen" args="0 0 0 0 0 0  map odom 100"/>

  <!-- Load Jackal's description, controllers, and teleop nodes.
  <include file="$(find jackal_description)/launch/description.launch">
    <arg name="config" value="$(arg config)" />
  </include>
  <include file="$(find jackal_control)/launch/control.launch" />
  <include file="$(find jackal_control)/launch/teleop.launch">
    <arg name="joystick" value="false"/>
  </include>
  -->

  <!-- send cob urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg pkg_hardware_config)/urdf/$(arg robot).urdf.xacro'" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>
</launch>
